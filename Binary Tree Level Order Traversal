/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
       List<List<Integer>> res = new ArrayList<List<Integer>>();
        List<Integer> inner = null;
        if (root == null){
            return res;
        }        
        Queue<TreeNode> q = new LinkedList();
        q.offer(root);
        while (!q.isEmpty()){
            inner = new ArrayList<>();
            int size = q.size();
            for (int i = 0; i<size;i++){
                TreeNode tmp = q.remove();
                inner.add(tmp.val);
                if (tmp.left !=null){
                    q.offer(tmp.left );
                }
                if (tmp.right !=null){
                    q.offer(tmp.right );
                }
            }
            res.add(inner);
        }
        return res;
    }
}
