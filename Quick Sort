public class Solution {
  public int[] quickSort(int[] array) {
    // Write your solution here
    quick_sort(array, 0, array.length-1);
    return array;
    
  }
  public int partition(int[] array, int left, int right){
    int start = left;
    int end = right-1;
    int pivot = array[right];
    while (start<=end){
      if (array[start]<=pivot){
        start++;
      }
      else if (array[end]>pivot){
        end--;
      }
      else if (array[start]>pivot && array[end]<=pivot){
        swap(array, start, end);
        start++;
        end--;
      }  
    }
    swap(array,start,right);
    return start;
  }

  public void swap(int[] array, int i, int j){
    int tmp = array[i];
    array[i] = array[j];
    array[j] = tmp;
  }
  public void quick_sort(int[] array, int left, int right){
    if (left>=right){
      return;
    }
    int idx = partition(array, left, right);
    quick_sort(array, left, idx-1);
    quick_sort(array, idx+1, right);
  }
}
