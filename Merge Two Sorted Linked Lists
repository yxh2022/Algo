/**
 * class ListNode {
 *   public int value;
 *   public ListNode next;
 *   public ListNode(int value) {
 *     this.value = value;
 *     next = null;
 *   }
 * }
 */
public class Solution {
  public ListNode merge(ListNode one, ListNode two) {
    // Write your solution here
    if (one == null && two == null){
      return null;
    }
    ListNode dummyNode = new ListNode(0);
    ListNode cur = dummyNode;
    ListNode cur1 = one;
    ListNode cur2 = two;
    while (cur1 != null & cur2 != null){
      if (cur1.value<=cur2.value){
        cur.next = cur1;
        cur1 = cur1.next;
      }
      else{
        cur.next = cur2;
        cur2 = cur2.next;
      }  
      cur = cur.next;
      }
    while (cur1 != null){
      cur.next = cur1;
      cur1 = cur1.next;
      cur = cur.next;
    }
    while (cur2 != null){
      cur.next = cur2;
      cur2 = cur2.next;
      cur = cur.next;
    }
    return dummyNode.next;
  }
}
