/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> res = new LinkedList();
        Deque<TreeNode> q = new LinkedList();
        ArrayList<Integer> l = new ArrayList();
        if (root == null){
            return res;
        }
        q.offer(root);
        int order = 1;
        while (!q.isEmpty()){
            l = new ArrayList();
            int size = q.size();     
            
            for (int i = 0; i< size; i++){
                TreeNode tmp = null;
                tmp = q.removeFirst(); 
                if (tmp.left != null){
                    q.offer(tmp.left);
                }
                if (tmp.right != null){
                    q.offer(tmp.right);
                }
                l.add(tmp.val);                 
            }
            if (order == -1){
              Collections.reverse(l);
            }
            
            res.add(l);
            order = order*(-1);
        }
        return res;
    }
}
