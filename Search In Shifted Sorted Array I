Given a target integer T and an integer array A, A is sorted in ascending order first, then shifted by an arbitrary number of positions.
For Example, A = {3, 4, 5, 1, 2} (shifted left by 2 positions). Find the index i such that A[i] == T or return -1 if there is no such index.

public class Solution {
  public int search(int[] array, int target) {
    // Write your solution here
    if (array == null || array.length == 0){
      return -1;
    }
    int left = 0;
    int right = array.length-1;
    int mid = 0;
    while(left < right -1){
      mid = (left+right)/2;
      if (array[mid] == target){
        return mid;
      }
      else if (array[mid] > target){ 
        if ( array[mid] < array[0]){// mid is located in second part
          right = mid;
        }
        // mid is located in the first part
        else{ // if (array[mid] >= array[0])
          if (target >= array[0]){ //target is located in the first part
            right = mid;
          }
          else{
            left = mid;
          }
        }
      }
      else{ // (array[mid] < target)  
        if(array[mid] >= array[0]){ // mid is located in first part
          left = mid;
        }
        else{ // if(array[mid] < array[0])  mid is located in second part
          if (target >= array[0]){ //target is located in the first part
             right = mid;
          }
         else{
           left = mid;
         }
        }
      }
    }
    if (array[left]== target){
      return left;
    }
    else if  (array[right]== target){
      return right;
    }
    else {
      return -1;
    }
  }
}
